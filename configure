#!/bin/sh


prefix_default="/usr/local"
cc_default="gcc"

show_help() {
    cat <<EOF
Usage: configure [options]
Options: [defaults in brackets after descriptions]

Options:
  --prefix=PREFIX          install in PREFIX [$prefix_default]
  --libdir=LIBDIR          install library in LIBDIR [PREFIX/lib]
  --includedir=DIR         install includes in DIR [PREFIX/include]
  --pkgconfigdir=DIR       install pkg-config files in DIR [LIBDIR/pkgconfig]

  --help                   print this message


  --disable-static         do not build static libraries [no]
  --enable-shared          build shared libraries [no]

  --cc=CC                  select compiler [$cc_default]
  --arch=ARCH              select architecture [$arch]
  --target-os=OS           compiler targets OS [$target_os]

  --cross-prefix=PREFIX    use PREFIX for compilation tools [$cross_prefix]
  --enable-cross-compile   assume a cross-compiler is used

EOF
  exit 0
}

# Set default values
prefix=$prefix_default
libdir='${prefix}/lib'
includedir='${prefix}/include'
pkgconfigdir='${libdir}/pkgconfig'

cc=$cc_default
arch="$(uname -m)"
target_os="$(uname -o)"


# Override values set by user
for opt do
    optval="${opt#*=}"
    case "$opt" in
        --help|-h) show_help
        ;;
        *)
            optname="${opt%%=*}"
            optname="${optname#--}"
            optname=$(echo "$optname" | sed 's/-/_/g')
            eval $optname='$optval'
        ;;
    esac
done

# Select arch var according to common arch names
case "$arch" in
    arm*)
        arch="arm"
    ;;
    i[3-6]86*|x86_64|x86_32|amd64)
        arch="x86"
    ;;
		*)
		echo "Unsupported archictecture $arch"
		exit 1.
		;;
esac


cc="${cross_prefix}${cc}"
ar="${cross_prefix}ar"
ranlib="${cross_prefix}ranlib"

cat > config.mak <<EOF
CC=${cc}
AR=${ar}
RANLIB=${ranlib}
ARCH=${arch}
VERBOSITY=0
CFLAGS_COMMON= -Wall --pedantic -fPIC
CFLAGS_DEBUG=  -O0 -g
CFLAGS_RELEASE=  -Wall -O3 -std=c11 -fomit-frame-pointer -pthread -g
SSE_CFLAGS= -mssse3
SHARED_LIBSUFF:=.so
STATIC_LIBSUFF:=.a
BUILDDIR=build
BUILD_TYPE=RELEASE

INSTALL_PREFIX=${prefix}
INSTALL_LIB=\$(INSTALL_PREFIX)/lib/libopenvvc
INSTALL_INCLUDE=\$(INSTALL_PREFIX)/include/libopenvvc
INSTALL_PKGCONFIG=\$(INSTALL_PREFIX)/lib/pkgconfig
INSTALL_BIN=\$(INSTALL_PREFIX)/bin
EOF

cat > config.sh <<EOF
INSTALL_PREFIX=${prefix}
INSTALL_LIB=\${INSTALL_PREFIX}/lib/libopenvvc
INSTALL_INCLUDE=\${INSTALL_PREFIX}/include/libopenvvc
INSTALL_PKGCONFIG=\${INSTALL_PREFIX}/lib/pkgconfig
INSTALL_BIN=\${INSTALL_PREFIX}/bin
EOF

exit 0
